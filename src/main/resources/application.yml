server:
  port: ${PORT:8080}
  http2:
    enabled: true
spring:
  application:
    name: tracking-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  liquibase:
        enabled: false # Poner en true mas adelante
        change-log: classpath:db/changelog/db.changelog-master.yaml
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1800000
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      timeout: 2000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        "[format_sql]": false # Cambiar a true si se quiere ver el SQL formateado
        jdbc:
          "[batch_size]": 25
        "[order_inserts]": true
        "[order_updates]": true
        query:
          "[in_clause_parameter_padding]": true
        "[generate_statistics]": ${JPA_STATISTICS:false}

    open-in-view: false
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  
  #cloud:
  #  azure:
  #    servicebus:
  #      connection-string: ${SERVICEBUS_CONNECTION_STRING}
  #      topic: ${SERVICEBUS_TOPIC:tracking-events}
  #      subscription: ${SERVICEBUS_SUBSCRIPTION:tracking-subscription}
  #      pricing-tier: ${SERVICEBUS_PRICING_TIER:Standard}

  security:
    filter:
      order: 10
    user:
      name: ${ADMIN_USER:admin}
      password: ${ADMIN_PASSWORD}
      roles: ADMIN

management:
  server:
    port: 8080
  
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,prometheus,metrics
      cors:
        allowed-origins: "*" #"http://localhost:3000,https://grafana.telconova.com"
        allowed-methods: GET
        
  endpoint:
    health:
      show-details: when-authorized
      group:
        readiness:
          include: readinessState,db
        liveness:
          include: livenessState,diskSpace
      probes:
        enabled: true
    prometheus:
      access: read-only  
    metrics:
      access: read-only  
      
  metrics:
    tags:
      application: tracking-service
      service: telconova-supportsuite
      environment: ${spring.profiles.active:default}
      version: ${info.app.version:1.0.0} 
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
        "[tracking.avance.processing.time]": true
        "[tracking.evidencia.upload.time]": true 
      slo:
        "[http.server.requests]": 50ms,100ms,200ms,500ms,1s,2s
        "[tracking.avance.processing.time]": 100ms,500ms,1s
        "[tracking.evidencia.upload.time]": 1s,5s,10s     
      percentiles:
        "[http.server.requests]": 0.5,0.95,0.99
        "[tracking.avance.processing.time]": 0.5,0.9,0.95,0.99
    enable:
      jvm: true
      process: true
      system: true
      tomcat: true
      jdbc: true
      logback: true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 30s
        descriptions: true
  info:
    java:
      enabled: true
    env:
      enabled: true
    git:
      mode: simple
    build:
      enabled: true
    os:
      enabled: true

info:  
  app:
    name: Tracking Service
    description: Gestión de avances técnicos - TelcoNova SupportSuite
    version: 1.0.0  

logging:
  level:
    root: INFO
    "[com.telconova.tracking]": DEBUG
    "[org.hibernate.SQL]": INFO
    "[org.hibernate.type.descriptor.sql.BasicBinder]": INFO
    "[org.springframework.web]": INFO
    "[org.springframework.cache]": DEBUG
    "[org.springframework.data.redis]": DEBUG
    "[org.springframework.security]": INFO
    "[org.hibernate.stat]": DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %highlight(%-5level) - %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ./logs/tracking-service.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 7
      total-size-cap: 100MB

app:
  cors:
    allowed-origins: ${ALLOWED_ORIGINS:*}
    allowed-methods: GET, POST, PUT, DELETE, OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  websocket:
    path: /ws/tracking
    allowed-origins: ${ALLOWED_ORIGINS:*}
    endpoint-prefix: /topic
    application-destination-prefix: /app
    user-destination-prefix: /user
    heartbeat-interval: 10000
    heartbeat-time-to-live: 30000
  jwt:
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION:3600000}
    roles:
      admin: ADMIN_TRACKING
      user: USER_TRACKING
  storage:
    type: ${STORAGE_TYPE:local} # local, azure, s3, minio
    local:
      location: ${STORAGE_LOCAL_PATH:uploads}
    azure:
      connection-string: ${AZURE_STORAGE_CONNECTION_STRING:}
      container-name: ${AZURE_STORAGE_CONTAINER:evidencias}
      account-name: ${AZURE_STORAGE_ACCOUNT}
      account-key: ${AZURE_STORAGE_KEY}
      endpoint: https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net
    s3:
      access-key: ${AWS_ACCESS_KEY:}
      secret-key: ${AWS_SECRET_KEY:}
      region: ${AWS_REGION:us-east-1}
      bucket-name: ${S3_BUCKET:evidencias}
    minio:
      endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
      access-key: ${MINIO_ACCESS_KEY:minioadmin}
      secret-key: ${MINIO_SECRET_KEY:minioadmin}
      bucket-name: ${MINIO_BUCKET:evidencias}

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    path: /
    enabled: true
    tags-sorter: alpha
    operations-sorter: method
    display-request-duration: true
    disable-swagger-default-url: true
    doc-expansion: none
  show-actuator: true
  packages-to-scan: com.telconova.tracking.controller